helmapiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "radarr.fullname" . }}
  labels:
    {{- include "radarr.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "radarr.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "radarr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "radarr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
      {{- if or $.Values.env $.Values.envSecrets }}
        env:
        {{- range $key, $value := $.Values.env }}
          - name: {{ $key }}
            value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $secret := $.Values.envSecrets }}
          - name: {{ $key }}
            valueFrom:
            secretKeyRef:
            name: {{ $secret }}
            key: {{ $key | quote }}
        {{- end }}
        {{- end }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: 7878
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if or .Values.persistence.enabled .Values.media.enabled }}
        volumeMounts:
          {{- if .Values.persistence.enabled }}
          - mountPath: {{ .Values.persistence.path | default "/config" }}
            name: config
          {{- end -}}
          {{- if .Values.media.enabled }}
          - mountPath: {{ .Values.media.path | default "/media" }}
            name: media
          {{- end -}}
        {{- end }}
      {{- if .Values.volumePermissions.enabled }}
      initContainers:
      - name: chown
        command:
          - sh
          - '-c'
          - {{ printf "chown -R %s:%s /config" ( .Values.env.PUID | default 1000 ) ( .Values.env.PGID | default 1000 ) }}
        image: busybox
        imagePullPolicy: IfNotPresent
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /config
            name: config
      {{- end }}
        {{- if or .Values.persistence.enabled .Values.media.enabled }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ default ( printf "%s-pvc" ( include "radarr.fullname" . )) .Values.persistence.existingClaim }}
        {{- end }}
        {{- if .Values.media.enabled }}
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Values.media.existingClaim }}
        {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
